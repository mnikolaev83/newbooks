// <auto-generated />
using System;
using BookDataProvider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookDataProvider.Migrations
{
    [DbContext(typeof(BookDBContext))]
    [Migration("20181221161422_Cat1")]
    partial class Cat1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookDataProvider.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedAt");

                    b.Property<string>("AuthorFullName");

                    b.Property<string>("AuthorShortName");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("DateAddedToStore");

                    b.Property<string>("Description");

                    b.Property<string>("ImageURL");

                    b.Property<string>("Isbn");

                    b.Property<int>("PagesAmnt");

                    b.Property<string>("Publisher");

                    b.Property<int>("RunAmnt");

                    b.Property<string>("Series");

                    b.Property<string>("StoreCode");

                    b.Property<string>("Subcategory");

                    b.Property<string>("Target");

                    b.Property<string>("Title");

                    b.Property<string>("Translated");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookDataProvider.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BookDataProvider.Entities.FavoriteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Publisher");

                    b.Property<string>("Series");

                    b.Property<string>("Subcategory");

                    b.Property<string>("Target");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("FavoriteList");
                });

            modelBuilder.Entity("BookDataProvider.Entities.IgnoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Publisher");

                    b.Property<string>("Series");

                    b.Property<string>("Subcategory");

                    b.Property<string>("Target");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("IgnoreList");
                });

            modelBuilder.Entity("BookDataProvider.Entities.JobLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BooksFetched");

                    b.Property<DateTime?>("CompletedAt");

                    b.Property<string>("ExceptonMessage");

                    b.Property<string>("ExceptonStacktrace");

                    b.Property<DateTime?>("FailedAt");

                    b.Property<DateTime>("StartedAt");

                    b.HasKey("Id");

                    b.ToTable("JobLog");
                });

            modelBuilder.Entity("BookDataProvider.Entities.QueryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BooksFetched");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<DateTime>("QueryAt");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("QueryLog");
                });

            modelBuilder.Entity("BookDataProvider.Entities.WishItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedAt");

                    b.Property<int?>("BookId");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("WishList");
                });

            modelBuilder.Entity("BookDataProvider.Entities.Book", b =>
                {
                    b.HasOne("BookDataProvider.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("BookDataProvider.Entities.FavoriteItem", b =>
                {
                    b.HasOne("BookDataProvider.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("BookDataProvider.Entities.IgnoreItem", b =>
                {
                    b.HasOne("BookDataProvider.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("BookDataProvider.Entities.QueryLog", b =>
                {
                    b.HasOne("BookDataProvider.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("BookDataProvider.Entities.WishItem", b =>
                {
                    b.HasOne("BookDataProvider.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");
                });
#pragma warning restore 612, 618
        }
    }
}
